#!/usr/bin/env bash

# fail fast
set -eo pipefail

start_time=$(date +%s%N)

# debug
# set -x

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

layers_dir="$CNB_LAYERS_DIR"
env_dir="$CNB_PLATFORM_DIR/env"

if compgen -G "${env_dir}/*" > /dev/null; then
  for var in "${env_dir}"/*; do
    declare "$(basename "${var}")=$(<"${var}")"
  done
fi

# List the CNB environment variables
topic "CNB Environment Variables"
# Iterate over all env vars that start with CNB_ and print them
for var in $(compgen -A variable | grep '^CNB_'); do
  echo "$var=${!var}"
done | indent

# Lists the files in the /workspace directory
topic "PWD (${PWD})"
ls -al "${PWD}" | indent

# Lists the files in the /platform directory
topic "Contents of CNB_PLATFORM_DIR (${CNB_PLATFORM_DIR})"
ls -al "${CNB_PLATFORM_DIR}" | indent

# Lists the files in the /layers directory
topic "Contents of CNB_LAYERS_DIR (${CNB_LAYERS_DIR})"
ls -al "${CNB_LAYERS_DIR}" | indent

# Lists the files in the /cnb directory
topic "Contents of /cnb"
ls -al /cnb | indent

# Lists the files in the CNB_PLATFORM_DIR/env directory
topic "Contents of CNB_PLATFORM_DIR/env"
ls -al "${CNB_PLATFORM_DIR}/env" | indent

# Prints the contents of /workspace/Procfile
topic "Contents of PWD/Procfile"
cat "${PWD}/Procfile" | indent

# Prints the contents of /layers/config/metadata.toml
# topic "Contents of CNB_LAYERS_DIR/config/metadata.toml"
# cat "${apt_layer}/config/metadata.toml" | indent
#
# -- - layers_dir (e.g. /layers)
#      \ buildpack_id
#        | - startup.toml - launch = true if the layer should be included in the launch image
#          \ startup
#            \ exec.d
#              | - sleep.sh - script that sleeps for 10 minutes

topic "Inserting a sleep into the startup script for the image:"
# Insert a heredoc into an exec.d script that sleeps for 10 minutes
echo "Creating a startup layer" | indent
mkdir -p "${layers_dir}/startup/exec.d"
# Make this a layer directory:
echo "Setting the launch flag to true" | indent
cat <<EOF > "${layers_dir}/startup.toml"
[types]
launch = true
EOF

echo "Creating a sleep script" | indent
cat <<EOF > "${layers_dir}/startup/exec.d/sleep.sh"
#!/usr/bin/env bash
set -eo pipefail

echo "Sleeping for 10 minutes during startup..."
sleep 600

echo "Done sleeping"

echo "Setting an environment variable BUILDPACK_DEBUG=true to test"
# There's a 3rd file that is a quazi-control plane for setting buildpack env vars
# https://github.com/buildpacks/spec/blob/main/buildpack.md#execd
# https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/use-exec.d/
# Output the environment variable EXAMPLE="test" to the specified file descriptor
echo "BUILDPACK_DEBUG=\"true\"" >&3
EOF
chmod +x "${layers_dir}/startup/exec.d/sleep.sh"

# Then sleeps for 10 minutes to allow for debugging
topic "Sleeping for 10 minutes"
sleep 600
topic "Done sleeping"

end_time=$(date +%s%N)
echo "Elapsed time: $(( $(( end_time - start_time )) / 1000000 ))ms" | indent
